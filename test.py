import streamlit as st
import random

# 페이지 기본 설정
st.set_page_config(page_title="응급처치 학습 앱", page_icon="🚑", layout="centered")

st.title("🚑 응급처치 학습 앱")
st.markdown("응급 상황 대처법을 학습하고 퀴즈로 실력을 점검하세요!")

# =============================
# 응급처치 절차 데이터
# =============================
first_aid_guides = {
    "화상": [
        "🔥 즉시 뜨거운 원인(불, 뜨거운 물, 화학물질 등)에서 멀리한다.",
        "💧 화상 부위를 10~20분간 흐르는 시원한 물로 식힌다.",
        "❌ 얼음, 치약, 기름, 된장 등은 바르지 않는다.",
        "🩹 물집은 터뜨리지 말고 멸균 거즈로 가볍게 덮는다.",
        "📞 얼굴, 손, 생식기, 넓은 부위 화상은 즉시 119 신고."
    ],
    "기도폐쇄(성인)": [
        "🙍 환자가 기침할 수 있으면 격려하여 계속 기침하게 한다.",
        "🙅‍♂️ 심한 기도폐쇄 시 즉시 하임리히법 시행.",
        "🤲 환자 뒤에 서서 두 팔로 감싸고, 배꼽 위·명치 아래 부위를 주먹으로 강하게 밀어 올린다.",
        "🔁 기도가 뚫릴 때까지 반복.",
        "📞 의식 소실 시 즉시 119 신고 후 심폐소생술 시행."
    ],
    "기도폐쇄(영아)": [
        "👶 영아를 팔 위에 엎드려 얼굴은 아래로 향하게 한다.",
        "✋ 손바닥으로 어깨 사이를 5회 강하게 두드린다.",
        "⬇️ 효과 없으면 가슴 중앙을 2손가락으로 5회 압박한다.",
        "🔁 기도가 뚫릴 때까지 반복.",
        "📞 즉시 119 신고."
    ],
    "심정지": [
        "✅ 반응과 호흡 확인 (10초 이내).",
        "📞 119 신고 및 AED 요청.",
        "🙌 호흡과 맥박이 없으면 즉시 가슴압박 시작.",
        "💪 가슴압박: 분당 100~120회, 깊이 5~6cm, 30회 시행.",
        "👄 인공호흡: 2회 시행.",
        "🔁 가슴압박 30회 : 인공호흡 2회 반복.",
        "⚡ AED 도착 시 지시에 따라 전기충격 및 심폐소생술 계속."
    ],
    "출혈": [
        "🩸 출혈 부위를 직접 압박한다.",
        "🙌 지혈될 때까지 압박 유지.",
        "🩹 거즈나 천이 젖어도 제거하지 않고 위에 덧댄다.",
        "🦵 사지 출혈일 경우 심장보다 높게 올려준다.",
        "📞 지혈되지 않으면 즉시 119 신고."
    ],
    "골절": [
        "🦴 환자를 움직이지 않도록 한다.",
        "👀 돌출된 뼈는 억지로 밀어 넣지 않는다.",
        "📏 부목 등으로 골절 부위를 고정한다.",
        "🧊 냉찜질하여 부종 완화.",
        "📞 즉시 119 신고 및 병원 이송."
    ]
}

# =============================
# 퀴즈 데이터
# =============================
quiz_questions = [
    {
        "question": "화상 응급처치로 옳은 것은?",
        "options": [
            "얼음을 대어 빠르게 식힌다.",
            "흐르는 시원한 물에 10~20분간 식힌다.",
            "치약이나 된장을 바른다.",
            "물집은 바로 터뜨린다."
        ],
        "answer": "흐르는 시원한 물에 10~20분간 식힌다."
    },
    {
        "question": "성인 기도폐쇄 시 가장 먼저 해야 할 행동은?",
        "options": [
            "하임리히법 즉시 시행",
            "119에 신고",
            "기침을 유도한다.",
            "환자를 눕힌다."
        ],
        "answer": "기침을 유도한다."
    },
    {
        "question": "심정지 환자에게 가슴압박 깊이는 성인 기준 몇 cm인가?",
        "options": [
            "약 2cm", "약 3~4cm", "약 5~6cm", "10cm 이상"
        ],
        "answer": "약 5~6cm"
    },
    {
        "question": "출혈 부위가 심하게 피에 젖으면 어떻게 해야 할까?",
        "options": [
            "거즈를 제거하고 새로 감싼다.",
            "젖은 거즈 위에 새 거즈를 덧댄다.",
            "압박을 멈추고 냉찜질한다.",
            "즉시 상처를 씻는다."
        ],
        "answer": "젖은 거즈 위에 새 거즈를 덧댄다."
    },
    {
        "question": "심정지 환자에게 권장되는 가슴압박 속도는?",
        "options": [
            "분당 40~60회", "분당 80~100회", "분당 100~120회", "분당 150회 이상"
        ],
        "answer": "분당 100~120회"
    }
]

# =============================
# 탭 메뉴: 가이드 / 퀴즈
# =============================
tab1, tab2 = st.tabs(["📘 응급처치 가이드", "📝 퀴즈 모드"])

with tab1:
    situation = st.selectbox(
        "응급 상황을 선택하세요",
        ["-- 선택 --"] + list(first_aid_guides.keys())
    )

    if situation != "-- 선택 --":
        st.subheader(f"👉 {situation} 응급처치 방법")
        steps = first_aid_guides[situation]
        for i, step in enumerate(steps, 1):
            st.write(f"{i}. {step}")
        st.success("⚠️ 응급처치는 의료진의 진료를 대체할 수 없으며, 반드시 119에 신고해야 합니다.")

with tab2:
    st.subheader("📝 응급처치 퀴즈")
    num_questions = 5  # 출제할 문제 수
    selected_questions = random.sample(quiz_questions, num_questions)

    user_answers = {}
    for i, q in enumerate(selected_questions, 1):
        st.write(f"**Q{i}. {q['question']}**")
        user_answers[i] = st.radio(
            f"문제 {i} 보기", q["options"], index=None, key=f"q{i}"
        )
        st.markdown("---")

    if st.button("제출하기"):
        score = 0
        for i, q in enumerate(selected_questions, 1):
            if user_answers[i] == q["answer"]:
                score += 1
        st.subheader(f"📊 결과: {score} / {num_questions} 점")
        if score == num_questions:
            st.success("🎉 완벽합니다! 응급처치 지식을 잘 알고 계시네요.")
        elif score >= num_questions // 2:
            st.info("😊 잘하셨어요. 조금만 더 보완하면 됩니다.")
        else:
            st.error("⚠️ 학습이 더 필요합니다. 응급처치 가이드를 다시 확인하세요!")

